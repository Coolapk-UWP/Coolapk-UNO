<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CoolapkUNO.Controls"
    xmlns:root="clr-namespace:CoolapkUNO">

    <WindowChrome
        x:Key="DefaultWindowChrome"
        x:Shared="False"
        CaptionHeight="{DynamicResource {x:Static local:TitleBar.HeightKey}}"
        NonClientFrameEdges="None"
        ResizeBorderThickness="4"
        UseAeroCaptionButtons="False" />

    <WindowChrome
        x:Key="AeroWindowChrome"
        x:Shared="False"
        CaptionHeight="{DynamicResource {x:Static local:TitleBar.HeightKey}}"
        GlassFrameThickness="-1"
        NonClientFrameEdges="None"
        ResizeBorderThickness="4"
        UseAeroCaptionButtons="False" />

    <Style x:Key="BaseWindowStyle" TargetType="Window">
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource DefaultWindowChrome}" />
        <Setter Property="local:WindowHelper.FixMaximizedWindow" Value="True" />
        <Setter Property="local:TitleBar.ButtonBackground" Value="{DynamicResource TitleBarButtonBackground}" />
        <Setter Property="local:TitleBar.ButtonForeground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="local:TitleBar.ButtonInactiveBackground" Value="{DynamicResource TitleBarButtonBackgroundInactive}" />
        <Setter Property="local:TitleBar.ButtonInactiveForeground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
        <Setter Property="local:TitleBar.ButtonHoverBackground" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
        <Setter Property="local:TitleBar.ButtonHoverForeground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
        <Setter Property="local:TitleBar.ButtonPressedBackground" Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
        <Setter Property="local:TitleBar.ButtonPressedForeground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border
                        x:Name="LayoutRoot"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid x:Name="ContentGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <local:TitleBarControl
                                    Title="{TemplateBinding Title}"
                                    Panel.ZIndex="1"
                                    BackButtonCommand="{TemplateBinding local:TitleBar.BackButtonCommand}"
                                    BackButtonCommandParameter="{TemplateBinding local:TitleBar.BackButtonCommandParameter}"
                                    BackButtonCommandTarget="{TemplateBinding local:TitleBar.BackButtonCommandTarget}"
                                    BackButtonStyle="{TemplateBinding local:TitleBar.BackButtonStyle}"
                                    Background="{TemplateBinding local:TitleBar.Background}"
                                    ButtonBackground="{TemplateBinding local:TitleBar.ButtonBackground}"
                                    ButtonForeground="{TemplateBinding local:TitleBar.ButtonForeground}"
                                    ButtonHoverBackground="{TemplateBinding local:TitleBar.ButtonHoverBackground}"
                                    ButtonHoverForeground="{TemplateBinding local:TitleBar.ButtonHoverForeground}"
                                    ButtonInactiveBackground="{TemplateBinding local:TitleBar.ButtonInactiveBackground}"
                                    ButtonInactiveForeground="{TemplateBinding local:TitleBar.ButtonInactiveForeground}"
                                    ButtonPressedBackground="{TemplateBinding local:TitleBar.ButtonPressedBackground}"
                                    ButtonPressedForeground="{TemplateBinding local:TitleBar.ButtonPressedForeground}"
                                    ExtendViewIntoTitleBar="{TemplateBinding local:TitleBar.ExtendViewIntoTitleBar}"
                                    Foreground="{TemplateBinding local:TitleBar.Foreground}"
                                    Icon="{TemplateBinding Icon}"
                                    InactiveBackground="{TemplateBinding local:TitleBar.InactiveBackground}"
                                    InactiveForeground="{TemplateBinding local:TitleBar.InactiveForeground}"
                                    IsActive="{TemplateBinding IsActive}"
                                    IsBackButtonVisible="{TemplateBinding local:TitleBar.IsBackButtonVisible}"
                                    IsBackEnabled="{TemplateBinding local:TitleBar.IsBackEnabled}"
                                    IsIconVisible="{TemplateBinding local:TitleBar.IsIconVisible}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Style="{TemplateBinding local:TitleBar.Style}" />

                                <AdornerDecorator x:Name="AdornerDecorator" Grid.Row="1">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </AdornerDecorator>

                                <ResizeGrip
                                    x:Name="WindowResizeGrip"
                                    Grid.Row="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    IsTabStop="false"
                                    Visibility="Collapsed"
                                    WindowChrome.ResizeGripDirection="BottomRight" />
                            </Grid>

                            <Border
                                x:Name="HighContrastBorder"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                                BorderThickness="7,1,7,7"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Background" Value="Transparent">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource WindowBorderInactive}" />
                            <Setter TargetName="HighContrastBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                            <Setter TargetName="ContentGrid" Property="Margin" Value="7,0,7,7" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ContentGrid" Property="Margin" Value="0" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="local:TitleBar.ExtendViewIntoTitleBar" Value="True">
                            <Setter TargetName="AdornerDecorator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="AdornerDecorator" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowChrome.WindowChrome" Value="{x:Null}">
                <Setter Property="local:WindowHelper.FixMaximizedWindow" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="SnapWindowStyle"
        BasedOn="{StaticResource BaseWindowStyle}"
        TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource AeroWindowChrome}" />
    </Style>

    <Style BasedOn="{StaticResource DefaultWindowStyle}" TargetType="Window" />

</ResourceDictionary>